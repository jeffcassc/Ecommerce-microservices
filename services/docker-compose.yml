version: '3.8'

services:
  # Infrastructure services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ecommerce-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    networks:
      - ecommerce-net

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce-net

  # Application services
  user-service:
    build: 
      context: .
      dockerfile: ./user-service/Dockerfile
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: development
      KAFKA_BROKER: kafka:9092
      MONGO_URI: mongodb://mongo:27017/ecommerce
    depends_on:
      - kafka
      - mongo
    networks:
      - ecommerce-net

  product-service:
    build:
      context: .
      dockerfile: ./product-service/Dockerfile
    ports:
      - "5001:5001"
    environment:
      FLASK_ENV: development
      KAFKA_BROKER: kafka:9092
      MONGO_URI: mongodb://mongo:27017/ecommerce
    depends_on:
      - kafka
      - mongo
    networks:
      - ecommerce-net

  cart-service:
    build: 
      context: .
      dockerfile: ./cart-service/Dockerfile
    ports:
      - "5002:5002"
    environment:
      FLASK_ENV: development
      KAFKA_BROKER: kafka:9092
      MONGO_URI: mongodb://mongo:27017/ecommerce
    depends_on:
      - kafka
      - mongo
      - user-service
      - product-service
    networks:
      - ecommerce-net

  notification-service:
    build: 
      context: .
      dockerfile: ./notification-service/Dockerfile
    ports:
      - "5003:5003"
    environment:
      FLASK_ENV: development
      KAFKA_BROKER: kafka:9092
      MONGO_URI: mongodb://mongo:27017/ecommerce
    depends_on:
      - kafka
      - mongo
    networks:
      - ecommerce-net

volumes:
  mongo_data:

networks:
  ecommerce-net:
    driver: bridge